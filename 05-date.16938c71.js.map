{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/05-date.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","// const date = new Date()\n// console.dir(date);\n\n// Создает ОБЪЕКТ new Date.getTime() с методами и т.д.\n// Создает просто значение времени как число  Date.now();\n\n// const day1 = Date.now();\n// console.log('day1',day1);\n// setTimeout(()=>{\n//     const day2 = Date.now();\n//     console.log('day1',day1);\n//     console.log('day2',day2);\n\n// console.log(day2-day1);\n\n// }, 3000)\n\n\n// 1 Создали объект таймер, в нем создали метод старт который будет запускать таймер с интервалом 1сек\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  clockface: document.querySelector('.js-clockface'),\n};\n\nconst timer = {\n  intervalId: null,\n  isActive: false,\n  init() {\n    const time = convertMs(0);\n    updateClockFace(time);\n  },\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    this.isActive = true;\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      //ниже уже не надо и мы преобразовываем\n      const { days, hours, minutes, seconds } = convertMs(deltaTime);\n      console.log(`${days}:${hours}:${minutes}:${seconds}`);\n\n      const time = convertMs(deltaTime);\n      updateClockFace(time);\n    }, 1000);\n  },\n\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n  },\n};\n\ntimer.init();\n\n//! ----------------------------------------------------------------------------------------------------------------------------------\n//*  Создадим класс Timer на основе нашего объекта Этот класс будет предоставлять логику нашего таймера, наш класс не должен ни-\n// чего знать про Фу updateClockFace (обновление интерфейса-вставка данных в разметку) Если хотим обновлять интерфейс на каждом тикании\n//можем в Класс передать Фу обновл, положим ее в объект настроек const timer = new Timer({ onTicTac: updateClockFace}) т.е. создали\n// свойство onTicTac в которое передали ссылку на внешнюю функцию onClockFace. Класс будет знать, что ему может передадут св-во\n// onTicTac. Ф!! Функции addLeadingZero() и convertMs() сделаем методами класса т.к.они не отвечают за рисование Интерфейса\n\nclass Timer {\n  constructor({ onTicTac }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTicTac = onTicTac;\n    this.init();\n  }\n\n  // для того чтоб сразу появлялось табло ( а не тогда, кокда на стпарт кликнули)\n  init(){\n    const time = this.convertMs(0);\n    this.onTicTac(time);\n  }\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    this.isActive = true;\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n\n      const time = this.convertMs(deltaTime);\n      //ссылка на ФУ updateClockFace(time)\n      this.onTicTac(time);\n    }, 1000);\n  }\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n// Для обнуления  при стопе\n    const time = this.convertMs(0);\n      this.onTicTac(time);\n  }\n\n  addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    const days = this.addLeadingZero(Math.floor(ms / day));\n    const hours = this.addLeadingZero(Math.floor((ms % day) / hour));\n    const minutes = this.addLeadingZero(\n      Math.floor(((ms % day) % hour) / minute)\n    );\n    const seconds = this.addLeadingZero(\n      Math.floor((((ms % day) % hour) % minute) / second)\n    );\n\n    return { days, hours, minutes, seconds };\n  }\n}\n\nconst timer1 = new Timer({\n  onTicTac: updateClockFace,\n});\n//!====================================================================================================================================\n\n\nrefs.startBtn.addEventListener('click', timer1.start.bind(timer));\nrefs.stopBtn.addEventListener('click', timer1.stop.bind(timer))\n\n// ?Повесил disabled или снимаю для домашки \n// refs.startBtn.addEventListener('click', () => {\n//   refs.startBtn.disabled = true;\n//   refs.stopBtn.disabled = false;\n//   timer.start();\n// });\n\n// refs.stopBtn.addEventListener('click', () => {\n//   refs.startBtn.disabled = false;\n//   refs.stopBtn.disabled = true;\n\n//   timer.stop();\n// });\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  refs.clockface.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n}\n\n// Принимает число, приводит к строке и добавляет в значение 0,  если число меньше 2-х знакв\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\n\n\n\n\n//* Вариант без класса  goit--hw-09 ---------------------------------------------------------------------------------------------------\n// import flatpickr from 'flatpickr';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import 'flatpickr/dist/flatpickr.min.css';\n\n// let finalTime = 0;\n// const refs = {\n//   input: document.querySelector('#datetime-picker'),\n//   startBtn: document.querySelector('button[data-start]'),\n//   days: document.querySelector('span[data-days]'),\n//   hourss: document.querySelector('span[data-hours]'),\n//   minutes: document.querySelector('span[data-minutes]'),\n//   seconds: document.querySelector('span[data-seconds]'),\n// };\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     if (selectedDates[0] <= Date.now()) {\n//       Notify.failure('Please choose a date in the future');\n//       refs.startBtn.disabled = true;\n//       return;\n//     }\n//     refs.startBtn.disabled = false;\n//     finalTime = selectedDates[0];\n//   },\n// };\n\n// flatpickr('input#datetime-picker', options);\n\n// const timer = {\n//   intervalId: null,\n//   start() {\n//     refs.startBtn.disabled = true;\n//     refs.input.disabled = true;\n//     this.intervalId = setInterval(() => {\n//       const realTime = Date.now();\n//       const diff = finalTime - realTime;\n//       const timeComponents = convertMs(diff);\n\n//       if (diff < 1000) {\n//         clearInterval(this.intervalId);\n//       }\n//       updateInterfaceTime(timeComponents);\n//     }, 1000);\n//   },\n// };\n\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// function convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   // Remaining days\n//   const days = addLeadingZero(Math.floor(ms / day));\n//   // Remaining hours\n//   const hours = addLeadingZero(Math.floor((ms % day) / hour));\n//   // Remaining minutes\n//   const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n//   // Remaining seconds\n//   const seconds = addLeadingZero(\n//     Math.floor((((ms % day) % hour) % minute) / second)\n//   );\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function updateInterfaceTime({ days, hours, minutes, seconds }) {\n//   refs.days.textContent = `${days}`;\n//   refs.hourss.textContent = `${hours}`;\n//   refs.minutes.textContent = `${minutes}`;\n//   refs.seconds.textContent = `${seconds}`;\n// }\n\n// function onButtonClick() {\n//   timer.start();\n// }\n// refs.startBtn.addEventListener('click', onButtonClick);"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$8276efdaa8525ad8$var$refs","startBtn","document","querySelector","stopBtn","clockface","$8276efdaa8525ad8$var$timer","intervalId","isActive","init","$8276efdaa8525ad8$var$updateClockFace","$8276efdaa8525ad8$var$convertMs","start","this","startTime","Date","now","setInterval","deltaTime","ref","days","hours","minutes","seconds","console","log","concat","stop","clearInterval","$8276efdaa8525ad8$var$timer1","Timer","param","onTicTac","time","convertMs","_this","String","padStart","ms","minute","second","hour","day","addLeadingZero","Math","floor","textContent","$8276efdaa8525ad8$var$addLeadingZero","addEventListener","bind"],"version":3,"file":"05-date.16938c71.js.map"}