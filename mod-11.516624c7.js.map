{"mappings":"AAyDA,MAAMA,EAAWC,SAASC,cAAc,UAClCC,EAAOF,SAASC,cAAc,SAC9BE,EAASH,SAASC,cAAc,QAChCG,EAAcJ,SAASC,cAAc,iBAE3CE,EAAOE,MAAMC,QAAU,OAKvB,SAASC,IACPC,MAAM,+BACHC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAEJ,MAAMC,EAASD,EACZE,KACC,EAACC,GAAEA,EAAEC,MAAEA,EAAKC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,KAAa,gBACxCJ,SAAUA,4CACiBC,oDACHC,wDACEE,uHAM9BC,KAAK,IAERlB,EAAKmB,UAAYR,EACjBd,EAASM,MAAMC,QAAU,OACzBH,EAAOE,MAAMC,QAAU,SAEPN,SAASsB,iBAAiB,WAClCC,SAAQC,IACdA,EAAIC,iBAAiB,QAASC,EAAW,IAG1B1B,SAASsB,iBAAiB,SAClCC,SAAQC,GAAOA,EAAIC,iBAAiB,QAASE,IAAU,IAEjEC,OAAMC,GAAOC,QAAQC,IAAIF,I,CAiC9B,SAASG,EAAiBhB,EAAQ,GAAIC,EAAS,GAAIE,EAAS,IAC1D,MAAO,iFAGsCH,+FAICC,+FAIAE,yE,CAOhD,SAASO,EAAWO,GAClB,MAAMlB,EAAKkB,EAAEC,OAAOC,WAAWpB,GAC/BP,MAAM,+BAAqBO,IAAM,CAC/BqB,OAAQ,WAEP3B,MAAK,KACJqB,QAAQC,IAAI,gBACZxB,GAAU,IAEXqB,OAAMS,GAASP,QAAQC,IAAI,SAAUM,I,CAG1C,SAASV,EAASM,GAChB,MAAMlB,EAAKkB,EAAEC,OAAOC,WAAWpB,GAEzBC,EAAQiB,EAAEC,OAAOC,WAAWlC,cAAc,UAAUqC,YAC1DR,QAAQC,IAAIf,GACZ,MAAMC,EAASgB,EAAEC,OAAOC,WAAWlC,cAAc,WAAWqC,YACtDnB,EAASc,EAAEC,OAAOC,WAAWlC,cAAc,WAAWqC,YAE5DlC,EAAYiB,UAAYW,EAAiBhB,EAAOC,EAAQE,GAExD,MAAMoB,EAAOvC,SAASC,cAAc,QACpCsC,EAAKd,iBAAiB,UAAUQ,IAC9BA,EAAEO,iBACF,MAAMC,EAAO,CACXzB,MAAOiB,EAAEC,OAAOQ,SAAS1B,MAAM2B,MAC/B1B,OAAQgB,EAAEC,OAAOQ,SAASzB,OAAO0B,MACjCxB,OAAQc,EAAEC,OAAOQ,SAASvB,OAAOwB,OAG7BC,EAAU,CACdR,OAAQ,QACRS,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,oCAIpBxC,MAAM,+BAAqBO,IAAM6B,GAC9BnC,MAAK,KACJF,IACAgC,EAAKlB,UAAY,EAAE,IAEpBO,OAAMS,GAASP,QAAQC,IAAIM,IAAO,G,CAjIzCtC,EAAS0B,iBAAiB,QAASlB,GAoCnCJ,EAAOsB,iBAAiB,SAExB,WACErB,EAAYiB,UAAYW,IACxB,MAAMO,EAAOvC,SAASC,cAAc,QACpCsC,EAAKd,iBAAiB,UAAUQ,IAC9BA,EAAEO,iBACF,MAAMC,EAAO,CACXzB,MAAOiB,EAAEC,OAAOQ,SAAS1B,MAAM2B,MAC/B1B,OAAQgB,EAAEC,OAAOQ,SAASzB,OAAO0B,MACjCxB,OAAQc,EAAEC,OAAOQ,SAASvB,OAAOwB,OAG7BC,EAAU,CACdR,OAAQ,OACRS,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,oCAIpBxC,MAAM,8BAAqBoC,GACxBnC,MAAK,KACJF,IACAgC,EAAKlB,UAAY,EAAE,IAEpBO,OAAMS,GAASP,QAAQC,IAAIM,IAAO,G","sources":["src/js/mod-11.js"],"sourcesContent":["// Т.к. мы установили json-server  в документации написано запустить json-server --watch db.json\n// мы в package.jsone в поле \"scripts\"  создадим элемент например с именем \"server\" и пропишем то что хотят json-server --watch db.json\n// Итого будет в package.jsone ---   \"server\":\"json-server --watch db.json\"\n\n// Далее вызываем npm run server\n\n//import './components/r-get'\n//import './components/c-post'\n// import './components/u-patch'\n//import './components/d-delete'\n//import './components/asynk-crud'\n\n// http://fecore.net.ua/books/m5ph3r-javascript/module-82/scope.html#hoisting\n\n// function getFruit(name) {\n//   const fruits = {\n//     apple: '🍎',\n//     citrus: '🍋',\n//     banana: '🍌',\n//     grapes: '🍇',\n//   };\n\n//   return new Promise((resolve, reject) =>\n//     setTimeout(() => resolve(fruits[name]), 500)\n//   );\n// }\n// async function aMakeSmoothie() {\n//   try {\n//     console.time('aMakeSmoothie');\n\n//     const grapes = getFruit('grapes')\n//     const citrus = getFruit('citrus')\n//     const apple = getFruit('apple')\n\n//     const fruits = await Promise.all([grapes,citrus, apple])\n//     console.log(fruits);\n//     console.timeEnd('aMakeSmoothie')\n//     return fruits\n\n//     // const grapes = await getFruit('grapes');\n//     // const citrus = await getFruit('citrus');\n//     // const apple = await getFruit('apple');\n//     // console.log(grapes);\n//     // console.log(citrus);\n//     // console.log(apple);\n//     // console.timeEnd('aMakeSmoothie');\n\n//   } catch (error) {\n//     console.log('Ошибка');\n//   }\n// }\n\n// aMakeSmoothie().then(data =>console.log(data))\n\n//  <p>Genres: ${genres.map(genr=>genr)}</p>\n\n//*  Занятие в Аленой =========================================================================================================================\nconst fetchBtn = document.querySelector('.fetch');\nconst list = document.querySelector('.list');\nconst addBtn = document.querySelector('.add');\nconst formWrapper = document.querySelector('.form-wrapper');\n\naddBtn.style.display = 'none';\nconst BASE_URL = 'http://localhost:4040';\n\nfetchBtn.addEventListener('click', getBooks);\n\nfunction getBooks() {\n  fetch(`${BASE_URL}/books`)\n    .then(responce => responce.json())\n    .then(books => {\n      // const arr = books.genres.map(gen=>gen)\n      const markup = books\n        .map(\n          ({ id, title, author, genres, rating }) => `\n    <li id=${id}>ID: ${id}\n    <p>Book Title:<span class='title'>${title}</span></p>\n    <p>Author:<span class='author'>${author}</span></p>  \n    <p>Rating:<span class ='rating'> ${rating}</span></p> \n    <button class=\"delete\">Delete</button>\n    <button class=\"edit\">Edit</button>\n    </li>\n    `\n        )\n        .join('');\n\n      list.innerHTML = markup;\n      fetchBtn.style.display = 'none';\n      addBtn.style.display = 'inline';\n\n      const delBtns = document.querySelectorAll('.delete');\n      delBtns.forEach(btn => {\n        btn.addEventListener('click', deleteBook);\n      });\n\n      const editBtns = document.querySelectorAll('.edit');\n      editBtns.forEach(btn => btn.addEventListener('click', editBook));\n    })\n    .catch(err => console.log(err));\n}\n\naddBtn.addEventListener('click', addBook);\n\nfunction addBook() {\n  formWrapper.innerHTML = createFormMarkup();\n  const form = document.querySelector('form');\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    const book = {\n      title: e.target.elements.title.value,\n      author: e.target.elements.author.value,\n      rating: e.target.elements.rating.value,\n    };\n\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(book),\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n    };\n\n    fetch(`${BASE_URL}/books`, options)\n      .then(() => {\n        getBooks();\n        form.innerHTML = '';\n      })\n      .catch(error => console.log(error));\n  });\n}\n\nfunction createFormMarkup(title = '', author = '', rating = '') {\n  return `<form>\n    <label>\n    Title:\n    <input type = 'text' name='title' value=\"${title}\"/>\n    </label>\n    <label>\n    Author:\n    <input type = 'text' name='author' value=\"${author}\"/>\n    </label>\n    <label>\n    Rating:\n    <input type = 'text' name='rating' value=\"${rating}\"/>\n    </label>\n    <button>Save button</button>\n    </form>\n    `;\n}\n\nfunction deleteBook(e) {\n  const id = e.target.parentNode.id;\n  fetch(`${BASE_URL}/books/${id}`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      console.log('Post deleted');\n      getBooks();\n    })\n    .catch(error => console.log('Error:', error));\n}\n\nfunction editBook(e) {\n  const id = e.target.parentNode.id;\n\n  const title = e.target.parentNode.querySelector('.title').textContent;\n  console.log(title);\n  const author = e.target.parentNode.querySelector('.author').textContent;\n  const rating = e.target.parentNode.querySelector('.rating').textContent;\n\n  formWrapper.innerHTML = createFormMarkup(title, author, rating);\n\n  const form = document.querySelector('form');\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    const book = {\n      title: e.target.elements.title.value,\n      author: e.target.elements.author.value,\n      rating: e.target.elements.rating.value,\n    };\n\n    const options = {\n      method: 'PATCH',\n      body: JSON.stringify(book),\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n    };\n\n    fetch(`${BASE_URL}/books/${id}`, options)\n      .then(() => {\n        getBooks();\n        form.innerHTML = '';\n      })\n      .catch(error => console.log(error));\n  });\n}\n"],"names":["$0c688d2063a30689$var$fetchBtn","document","querySelector","$0c688d2063a30689$var$list","$0c688d2063a30689$var$addBtn","$0c688d2063a30689$var$formWrapper","style","display","$0c688d2063a30689$var$getBooks","fetch","then","responce","json","books","markup","map","id","title","author","genres","rating","join","innerHTML","querySelectorAll","forEach","btn","addEventListener","$0c688d2063a30689$var$deleteBook","$0c688d2063a30689$var$editBook","catch","err","console","log","$0c688d2063a30689$var$createFormMarkup","e","target","parentNode","method","error","textContent","form","preventDefault","book","elements","value","options","body","JSON","stringify","headers"],"version":3,"file":"mod-11.516624c7.js.map"}